steps:

  - name: 'gcr.io/cloud-builders/docker'
    dir: 'flask-app'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/flask-app', '.']


  - name: 'gcr.io/cloud-builders/docker'
    dir: 'node-app'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/node-app', '.']


  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/flask-app']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/node-app']


  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'Get GKE credentials'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud container clusters get-credentials my-cluster --region us-west2 --project $PROJECT_ID
        mkdir -p /workspace/.kube
        cp /root/.kube/config /workspace/.kube/
    volumes:
      - name: 'kubeconfig'
        path: '/workspace/.kube'

  # פריסת ה-Flask Deployment
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'k8s/flask-deployment.yaml']
    env:
      - 'KUBECONFIG=/workspace/.kube/config'
    volumes:
      - name: 'kubeconfig'
        path: '/workspace/.kube'

  # פריסת ה-Flask Service
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'k8s/flask-service.yaml']
    env:
      - 'KUBECONFIG=/workspace/.kube/config'
    volumes:
      - name: 'kubeconfig'
        path: '/workspace/.kube'

  # פריסת ה-Node.js Deployment
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'k8s/nodejs-deployment.yaml']
    env:
      - 'KUBECONFIG=/workspace/.kube/config'
    volumes:
      - name: 'kubeconfig'
        path: '/workspace/.kube'

  # פריסת ה-Node.js Service
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'k8s/nodejs-service.yaml']
    env:
      - 'KUBECONFIG=/workspace/.kube/config'
    volumes:
      - name: 'kubeconfig'
        path: '/workspace/.kube'

images:
  - 'gcr.io/$PROJECT_ID/flask-app'
  - 'gcr.io/$PROJECT_ID/node-app'

options:
  logging: CLOUD_LOGGING_ONLY
