steps:
  # בניית תמונת Docker ל-Flask
  - name: 'gcr.io/cloud-builders/docker'
    dir: 'flask-app'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/flask-app', '.']

  # בניית תמונת Docker ל-Node.js
  - name: 'gcr.io/cloud-builders/docker'
    dir: 'node-app'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/node-app', '.']

  # דחיפת התמונות ל-GCR
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/flask-app']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/node-app']

  # התחברות ל-Cluster של GKE והכנת קובץ kubeconfig
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'container'
      - 'clusters'
      - 'get-credentials'
      - 'my-cluster'
      - '--region'
      - 'us-west2'
      - '--project'
      - '$PROJECT_ID'
    volumes:
      - name: 'kubeconfig'
        path: '/root/.kube'

  # פריסת ה-Flask Deployment
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'k8s/flask-deployment.yaml']
    volumes:
      - name: 'kubeconfig'
        path: '/root/.kube'

  # פריסת ה-Flask Service
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'k8s/flask-service.yaml']
    volumes:
      - name: 'kubeconfig'
        path: '/root/.kube'

  # פריסת ה-Node.js Deployment
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'k8s/nodejs-deployment.yaml']
    volumes:
      - name: 'kubeconfig'
        path: '/root/.kube'

  # פריסת ה-Node.js Service
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'k8s/nodejs-service.yaml']
    volumes:
      - name: 'kubeconfig'
        path: '/root/.kube'

images:
  - 'gcr.io/$PROJECT_ID/flask-app'
  - 'gcr.io/$PROJECT_ID/node-app'

options:
  logging: CLOUD_LOGGING_ONLY
